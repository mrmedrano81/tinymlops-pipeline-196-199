std_abs.h:75:3:constexpr float std::abs(float)	1
cmath:184:3:constexpr float std::cos(float)	1
cmath:338:3:constexpr float std::log(float)	1
cmath:425:3:constexpr float std::sin(float)	1
cmath:463:3:constexpr float std::sqrt(float)	1
cmath:501:3:constexpr float std::tanh(float)	1
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	1
kernel_util.h:31:28:const TfLiteTensor* tflite::GetInput(TfLiteContext*, const TfLiteNode*, int)	1
kernel_util.h:45:22:TfLiteTensor* tflite::GetOutput(TfLiteContext*, const TfLiteNode*, int)	1
kernel_util.h:59:12:int tflite::NumInputs(const TfLiteNode*)	1
kernel_util.h:60:12:int tflite::NumOutputs(const TfLiteNode*)	1
kernel_util.h:65:16:int64_t tflite::NumElements(const TfLiteIntArray*)	2
kernel_util.h:73:16:int64_t tflite::NumElements(const TfLiteTensor*)	1
elementwise.cc:28:6:bool tflite::ops::micro::elementwise::{anonymous}::IsNumericSupportedType(TfLiteType)	1
elementwise.cc:32:6:bool tflite::ops::micro::elementwise::{anonymous}::IsLogicalSupportedType(TfLiteType)	1
elementwise.cc:67:21:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::EvalNumeric(TfLiteContext*, TfLiteNode*, float (*)(float))	1
elementwise.cc:72:21:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::EvalLogical(TfLiteContext*, TfLiteNode*, bool (*)(bool))	1
elementwise.cc:77:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::AbsEval(TfLiteContext*, TfLiteNode*)	1
elementwise.cc:81:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::SinEval(TfLiteContext*, TfLiteNode*)	1
elementwise.cc:85:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::CosEval(TfLiteContext*, TfLiteNode*)	1
elementwise.cc:89:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::LogEval(TfLiteContext*, TfLiteNode*)	1
elementwise.cc:93:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::SqrtEval(TfLiteContext*, TfLiteNode*)	1
elementwise.cc:98:37:tflite::ops::micro::elementwise::{anonymous}::RsqrtEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>	1
elementwise.cc:98:37:static float tflite::ops::micro::elementwise::{anonymous}::RsqrtEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>::_FUN(float)	1
elementwise.cc:98:37:tflite::ops::micro::elementwise::{anonymous}::RsqrtEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>::operator float (*)(float)() const	1
elementwise.cc:97:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::RsqrtEval(TfLiteContext*, TfLiteNode*)	1
elementwise.cc:102:37:tflite::ops::micro::elementwise::{anonymous}::SquareEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>	1
elementwise.cc:102:37:static float tflite::ops::micro::elementwise::{anonymous}::SquareEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>::_FUN(float)	1
elementwise.cc:102:37:tflite::ops::micro::elementwise::{anonymous}::SquareEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>::operator float (*)(float)() const	1
elementwise.cc:101:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::SquareEval(TfLiteContext*, TfLiteNode*)	1
elementwise.cc:106:37:tflite::ops::micro::elementwise::{anonymous}::LogicalNotEval(TfLiteContext*, TfLiteNode*)::<lambda(bool)>	1
elementwise.cc:106:37:static bool tflite::ops::micro::elementwise::{anonymous}::LogicalNotEval(TfLiteContext*, TfLiteNode*)::<lambda(bool)>::_FUN(bool)	1
elementwise.cc:106:37:tflite::ops::micro::elementwise::{anonymous}::LogicalNotEval(TfLiteContext*, TfLiteNode*)::<lambda(bool)>::operator bool (*)(bool)() const	1
elementwise.cc:105:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::LogicalNotEval(TfLiteContext*, TfLiteNode*)	1
elementwise.cc:109:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::TANHEval(TfLiteContext*, TfLiteNode*)	1
elementwise.cc:116:21:TfLiteRegistration* tflite::ops::micro::Register_ABS()	1
elementwise.cc:130:21:TfLiteRegistration* tflite::ops::micro::Register_SIN()	1
elementwise.cc:144:21:TfLiteRegistration* tflite::ops::micro::Register_COS()	1
elementwise.cc:158:21:TfLiteRegistration* tflite::ops::micro::Register_LOG()	1
elementwise.cc:172:21:TfLiteRegistration* tflite::ops::micro::Register_SQRT()	1
elementwise.cc:186:21:TfLiteRegistration* tflite::ops::micro::Register_RSQRT()	1
elementwise.cc:200:21:TfLiteRegistration* tflite::ops::micro::Register_SQUARE()	1
elementwise.cc:214:21:TfLiteRegistration* tflite::ops::micro::Register_LOGICAL_NOT()	1
elementwise.cc:228:21:TfLiteRegistration* tflite::ops::micro::Register_TANH()	1
base.h:362:24:T flatbuffers::EndianScalar(T) [with T = int]	1
elementwise.cc:53:21:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::EvalImpl(TfLiteContext*, TfLiteNode*, T (*)(T), TfLiteType) [with T = float]	3
elementwise.cc:53:21:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::EvalImpl(TfLiteContext*, TfLiteNode*, T (*)(T), TfLiteType) [with T = bool]	3
elementwise.cc:38:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::GenericPrepare(TfLiteContext*, TfLiteNode*) [with bool (* <anonymous>)(TfLiteType) = tflite::ops::micro::elementwise::{anonymous}::IsNumericSupportedType]	5
elementwise.cc:38:14:TfLiteStatus tflite::ops::micro::elementwise::{anonymous}::GenericPrepare(TfLiteContext*, TfLiteNode*) [with bool (* <anonymous>)(TfLiteType) = tflite::ops::micro::elementwise::{anonymous}::IsLogicalSupportedType]	5
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = float]	2
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = float]	2
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = bool]	2
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = bool]	2
