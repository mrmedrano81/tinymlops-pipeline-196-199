limits:1204:7:static constexpr long int std::numeric_limits<long int>::min()	1
limits:1207:7:static constexpr long int std::numeric_limits<long int>::max()	1
fixedpoint.h:329:21:IntegerType gemmlowp::SaturatingRoundingDoublingHighMul(IntegerType, IntegerType) [with IntegerType = long int]	6
types.h:137:3:tflite::RuntimeShape::RuntimeShape()	1
types.h:156:3:tflite::RuntimeShape::RuntimeShape(int, const int32*)	1
types.h:178:3:tflite::RuntimeShape::~RuntimeShape()	3
types.h:188:16:int32 tflite::RuntimeShape::DimensionsCount() const	1
types.h:189:16:int32 tflite::RuntimeShape::Dims(int) const	2
types.h:194:15:void tflite::RuntimeShape::SetDim(int, int32)	2
types.h:204:17:int32* tflite::RuntimeShape::DimsData()	2
types.h:207:23:const int32* tflite::RuntimeShape::DimsData() const	2
types.h:211:23:const int32* tflite::RuntimeShape::DimsDataUpTo5D() const	1
types.h:213:15:void tflite::RuntimeShape::Resize(int)	5
types.h:231:15:void tflite::RuntimeShape::ReplaceWith(int, const int32*)	1
types.h:254:30:static tflite::RuntimeShape tflite::RuntimeShape::ExtendedShape(int, const tflite::RuntimeShape&)	1
types.h:265:14:int tflite::RuntimeShape::FlatSize() const	2
types.h:280:3:tflite::RuntimeShape::RuntimeShape(int, const tflite::RuntimeShape&, int)	2
types.h:379:12:int tflite::Offset(const tflite::RuntimeShape&, int, int, int, int)	5
types.h:481:12:int tflite::MatchingFlatSize(const tflite::RuntimeShape&, const tflite::RuntimeShape&)	2
types.h:491:12:int tflite::MatchingFlatSize(const tflite::RuntimeShape&, const tflite::RuntimeShape&, const tflite::RuntimeShape&)	2
common.h:138:14:int32 tflite::MultiplyByQuantizedMultiplierSmallerThanOneExp(int32, int32, int)	1
common.h:632:12:int tflite::SubscriptToIndex(const tflite::NdArrayDesc<4>&, int, int, int, int)	5
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	1
comparisons.h:138:8:tflite::reference_ops::BroadcastComparison4DSlowCommon::~BroadcastComparison4DSlowCommon()	1
comparisons.h:144:40:tflite::reference_ops::BroadcastComparison4DSlowCommon tflite::reference_ops::BroadcastComparison4DSlowPreprocess(const tflite::RuntimeShape&, const tflite::RuntimeShape&, const tflite::RuntimeShape&)	1
tensor_ctypes.h:34:21:tflite::RuntimeShape tflite::GetTensorShape(const TfLiteTensor*)	2
kernel_util.h:31:28:const TfLiteTensor* tflite::GetInput(TfLiteContext*, const TfLiteNode*, int)	1
kernel_util.h:45:22:TfLiteTensor* tflite::GetOutput(TfLiteContext*, const TfLiteNode*, int)	1
comparisons.cc:100:14:TfLiteStatus tflite::ops::micro::comparisons::{anonymous}::EqualEval(TfLiteContext*, TfLiteNode*)	35
comparisons.cc:135:14:TfLiteStatus tflite::ops::micro::comparisons::{anonymous}::NotEqualEval(TfLiteContext*, TfLiteNode*)	35
comparisons.cc:169:14:TfLiteStatus tflite::ops::micro::comparisons::{anonymous}::GreaterEval(TfLiteContext*, TfLiteNode*)	27
comparisons.cc:200:14:TfLiteStatus tflite::ops::micro::comparisons::{anonymous}::GreaterEqualEval(TfLiteContext*, TfLiteNode*)	27
comparisons.cc:231:14:TfLiteStatus tflite::ops::micro::comparisons::{anonymous}::LessEval(TfLiteContext*, TfLiteNode*)	27
comparisons.cc:262:14:TfLiteStatus tflite::ops::micro::comparisons::{anonymous}::LessEqualEval(TfLiteContext*, TfLiteNode*)	27
comparisons.cc:296:21:TfLiteRegistration* tflite::ops::micro::Register_EQUAL()	1
comparisons.cc:308:21:TfLiteRegistration* tflite::ops::micro::Register_NOT_EQUAL()	1
comparisons.cc:320:21:TfLiteRegistration* tflite::ops::micro::Register_GREATER()	1
comparisons.cc:332:21:TfLiteRegistration* tflite::ops::micro::Register_GREATER_EQUAL()	1
comparisons.cc:344:21:TfLiteRegistration* tflite::ops::micro::Register_LESS()	1
comparisons.cc:356:21:TfLiteRegistration* tflite::ops::micro::Register_LESS_EQUAL()	1
fixedpoint.h:357:20:IntegerType gemmlowp::RoundingDivideByPOT(IntegerType, int) [with IntegerType = long int]	1
common.h:718:13:void tflite::NdArrayDescsForElementwiseBroadcast(const tflite::RuntimeShape&, const tflite::RuntimeShape&, tflite::NdArrayDesc<N>*, tflite::NdArrayDesc<N>*) [with int N = 4]	4
comparisons.h:28:13:bool tflite::reference_ops::EqualFn(T, T) [with T = float]	1
comparisons.h:33:13:bool tflite::reference_ops::NotEqualFn(T, T) [with T = float]	1
comparisons.h:38:13:bool tflite::reference_ops::GreaterFn(T, T) [with T = float]	1
comparisons.h:42:13:bool tflite::reference_ops::GreaterEqualFn(T, T) [with T = float]	1
comparisons.h:46:13:bool tflite::reference_ops::LessFn(T, T) [with T = float]	1
comparisons.h:50:13:bool tflite::reference_ops::LessEqualFn(T, T) [with T = float]	1
base.h:362:24:T flatbuffers::EndianScalar(T) [with T = int]	1
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = bool]	2
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = bool]	2
comparisons.h:323:1:void tflite::reference_ops::Broadcast4DSlowEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = bool]	1
comparisons.h:323:1:void tflite::reference_ops::EqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = bool]	1
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = float]	2
comparisons.h:323:1:void tflite::reference_ops::Broadcast4DSlowEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float]	1
comparisons.h:323:1:void tflite::reference_ops::EqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float]	1
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = long int]	2
comparisons.h:323:1:void tflite::reference_ops::Broadcast4DSlowEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int]	1
comparisons.h:323:1:void tflite::reference_ops::EqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int]	1
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = long long int]	2
comparisons.h:323:1:void tflite::reference_ops::Broadcast4DSlowEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int]	1
comparisons.h:323:1:void tflite::reference_ops::EqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int]	1
comparisons.cc:78:1:void tflite::ops::micro::comparisons::{anonymous}::EvalQuantizedEqual(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, bool) [with input_dtype = unsigned char]	4
comparisons.cc:78:1:void tflite::ops::micro::comparisons::{anonymous}::EvalQuantizedEqual(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, bool) [with input_dtype = signed char]	4
comparisons.h:324:1:void tflite::reference_ops::Broadcast4DSlowNotEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = bool]	1
comparisons.h:324:1:void tflite::reference_ops::NotEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = bool]	1
comparisons.h:324:1:void tflite::reference_ops::Broadcast4DSlowNotEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float]	1
comparisons.h:324:1:void tflite::reference_ops::NotEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float]	1
comparisons.h:324:1:void tflite::reference_ops::Broadcast4DSlowNotEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int]	1
comparisons.h:324:1:void tflite::reference_ops::NotEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int]	1
comparisons.h:324:1:void tflite::reference_ops::Broadcast4DSlowNotEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int]	1
comparisons.h:324:1:void tflite::reference_ops::NotEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int]	1
comparisons.cc:79:1:void tflite::ops::micro::comparisons::{anonymous}::EvalQuantizedNotEqual(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, bool) [with input_dtype = unsigned char]	4
comparisons.cc:79:1:void tflite::ops::micro::comparisons::{anonymous}::EvalQuantizedNotEqual(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, bool) [with input_dtype = signed char]	4
comparisons.h:325:1:void tflite::reference_ops::Broadcast4DSlowGreaterNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float]	1
comparisons.h:325:1:void tflite::reference_ops::GreaterNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float]	1
comparisons.h:325:1:void tflite::reference_ops::Broadcast4DSlowGreaterNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int]	1
comparisons.h:325:1:void tflite::reference_ops::GreaterNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int]	1
comparisons.h:325:1:void tflite::reference_ops::Broadcast4DSlowGreaterNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int]	1
comparisons.h:325:1:void tflite::reference_ops::GreaterNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int]	1
comparisons.cc:80:1:void tflite::ops::micro::comparisons::{anonymous}::EvalQuantizedGreater(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, bool) [with input_dtype = unsigned char]	4
comparisons.cc:80:1:void tflite::ops::micro::comparisons::{anonymous}::EvalQuantizedGreater(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, bool) [with input_dtype = signed char]	4
comparisons.h:326:1:void tflite::reference_ops::Broadcast4DSlowGreaterEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float]	1
comparisons.h:326:1:void tflite::reference_ops::GreaterEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float]	1
comparisons.h:326:1:void tflite::reference_ops::Broadcast4DSlowGreaterEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int]	1
comparisons.h:326:1:void tflite::reference_ops::GreaterEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int]	1
comparisons.h:326:1:void tflite::reference_ops::Broadcast4DSlowGreaterEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int]	1
comparisons.h:326:1:void tflite::reference_ops::GreaterEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int]	1
comparisons.cc:81:1:void tflite::ops::micro::comparisons::{anonymous}::EvalQuantizedGreaterEqual(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, bool) [with input_dtype = unsigned char]	4
comparisons.cc:81:1:void tflite::ops::micro::comparisons::{anonymous}::EvalQuantizedGreaterEqual(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, bool) [with input_dtype = signed char]	4
comparisons.h:327:1:void tflite::reference_ops::Broadcast4DSlowLessNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float]	1
comparisons.h:327:1:void tflite::reference_ops::LessNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float]	1
comparisons.h:327:1:void tflite::reference_ops::Broadcast4DSlowLessNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int]	1
comparisons.h:327:1:void tflite::reference_ops::LessNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int]	1
comparisons.h:327:1:void tflite::reference_ops::Broadcast4DSlowLessNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int]	1
comparisons.h:327:1:void tflite::reference_ops::LessNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int]	1
comparisons.cc:82:1:void tflite::ops::micro::comparisons::{anonymous}::EvalQuantizedLess(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, bool) [with input_dtype = unsigned char]	4
comparisons.cc:82:1:void tflite::ops::micro::comparisons::{anonymous}::EvalQuantizedLess(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, bool) [with input_dtype = signed char]	4
comparisons.h:328:1:void tflite::reference_ops::Broadcast4DSlowLessEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float]	1
comparisons.h:328:1:void tflite::reference_ops::LessEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float]	1
comparisons.h:328:1:void tflite::reference_ops::Broadcast4DSlowLessEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int]	1
comparisons.h:328:1:void tflite::reference_ops::LessEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int]	1
comparisons.h:328:1:void tflite::reference_ops::Broadcast4DSlowLessEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int]	1
comparisons.h:328:1:void tflite::reference_ops::LessEqualNoScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int]	1
comparisons.cc:83:1:void tflite::ops::micro::comparisons::{anonymous}::EvalQuantizedLessEqual(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, bool) [with input_dtype = unsigned char]	4
comparisons.cc:83:1:void tflite::ops::micro::comparisons::{anonymous}::EvalQuantizedLessEqual(TfLiteContext*, TfLiteNode*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, bool) [with input_dtype = signed char]	4
fixedpoint.h:64:10:tRawType gemmlowp::Dup(typename gemmlowp::FixedPointRawTypeTraits<tRawType>::ScalarRawType) [with tRawType = long int]	1
fixedpoint.h:70:14:tIntegerType gemmlowp::BitAnd(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
fixedpoint.h:140:14:tIntegerType gemmlowp::ShiftRight(tIntegerType, int) [with tIntegerType = long int]	1
fixedpoint.h:199:14:tIntegerType gemmlowp::MaskIfLessThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
fixedpoint.h:94:14:tIntegerType gemmlowp::Add(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
fixedpoint.h:185:14:tIntegerType gemmlowp::MaskIfGreaterThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
common.h:707:13:void tflite::CopyDimsToDesc(const tflite::RuntimeShape&, tflite::NdArrayDesc<N>*) [with int N = 4]	2
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float; bool (* F)(T, T) = tflite::reference_ops::EqualFn<float>]	2
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float; bool (* F)(T, T) = tflite::reference_ops::EqualFn<float>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float; bool (* F)(T, T) = tflite::reference_ops::NotEqualFn<float>]	2
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float; bool (* F)(T, T) = tflite::reference_ops::NotEqualFn<float>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float; bool (* F)(T, T) = tflite::reference_ops::GreaterFn<float>]	2
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float; bool (* F)(T, T) = tflite::reference_ops::GreaterFn<float>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float; bool (* F)(T, T) = tflite::reference_ops::GreaterEqualFn<float>]	2
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float; bool (* F)(T, T) = tflite::reference_ops::GreaterEqualFn<float>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float; bool (* F)(T, T) = tflite::reference_ops::LessFn<float>]	2
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float; bool (* F)(T, T) = tflite::reference_ops::LessFn<float>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float; bool (* F)(T, T) = tflite::reference_ops::LessEqualFn<float>]	2
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = float; bool (* F)(T, T) = tflite::reference_ops::LessEqualFn<float>]	5
comparisons.h:28:13:bool tflite::reference_ops::EqualFn(T, T) [with T = bool]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = bool; bool (* F)(T, T) = tflite::reference_ops::EqualFn<bool>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = bool; bool (* F)(T, T) = tflite::reference_ops::EqualFn<bool>]	2
comparisons.h:28:13:bool tflite::reference_ops::EqualFn(T, T) [with T = long int]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int; bool (* F)(T, T) = tflite::reference_ops::EqualFn<long int>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int; bool (* F)(T, T) = tflite::reference_ops::EqualFn<long int>]	2
comparisons.h:28:13:bool tflite::reference_ops::EqualFn(T, T) [with T = long long int]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int; bool (* F)(T, T) = tflite::reference_ops::EqualFn<long long int>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int; bool (* F)(T, T) = tflite::reference_ops::EqualFn<long long int>]	2
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = unsigned char]	2
comparisons.h:323:1:void tflite::reference_ops::Broadcast4DSlowEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char]	1
comparisons.h:323:1:void tflite::reference_ops::EqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char]	1
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = signed char]	2
comparisons.h:323:1:void tflite::reference_ops::Broadcast4DSlowEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char]	1
comparisons.h:323:1:void tflite::reference_ops::EqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char]	1
comparisons.h:33:13:bool tflite::reference_ops::NotEqualFn(T, T) [with T = bool]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = bool; bool (* F)(T, T) = tflite::reference_ops::NotEqualFn<bool>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = bool; bool (* F)(T, T) = tflite::reference_ops::NotEqualFn<bool>]	2
comparisons.h:33:13:bool tflite::reference_ops::NotEqualFn(T, T) [with T = long int]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int; bool (* F)(T, T) = tflite::reference_ops::NotEqualFn<long int>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int; bool (* F)(T, T) = tflite::reference_ops::NotEqualFn<long int>]	2
comparisons.h:33:13:bool tflite::reference_ops::NotEqualFn(T, T) [with T = long long int]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int; bool (* F)(T, T) = tflite::reference_ops::NotEqualFn<long long int>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int; bool (* F)(T, T) = tflite::reference_ops::NotEqualFn<long long int>]	2
comparisons.h:324:1:void tflite::reference_ops::Broadcast4DSlowNotEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char]	1
comparisons.h:324:1:void tflite::reference_ops::NotEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char]	1
comparisons.h:324:1:void tflite::reference_ops::Broadcast4DSlowNotEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char]	1
comparisons.h:324:1:void tflite::reference_ops::NotEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char]	1
comparisons.h:38:13:bool tflite::reference_ops::GreaterFn(T, T) [with T = long int]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int; bool (* F)(T, T) = tflite::reference_ops::GreaterFn<long int>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int; bool (* F)(T, T) = tflite::reference_ops::GreaterFn<long int>]	2
comparisons.h:38:13:bool tflite::reference_ops::GreaterFn(T, T) [with T = long long int]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int; bool (* F)(T, T) = tflite::reference_ops::GreaterFn<long long int>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int; bool (* F)(T, T) = tflite::reference_ops::GreaterFn<long long int>]	2
comparisons.h:325:1:void tflite::reference_ops::Broadcast4DSlowGreaterWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char]	1
comparisons.h:325:1:void tflite::reference_ops::GreaterWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char]	1
comparisons.h:325:1:void tflite::reference_ops::Broadcast4DSlowGreaterWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char]	1
comparisons.h:325:1:void tflite::reference_ops::GreaterWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char]	1
comparisons.h:42:13:bool tflite::reference_ops::GreaterEqualFn(T, T) [with T = long int]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int; bool (* F)(T, T) = tflite::reference_ops::GreaterEqualFn<long int>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int; bool (* F)(T, T) = tflite::reference_ops::GreaterEqualFn<long int>]	2
comparisons.h:42:13:bool tflite::reference_ops::GreaterEqualFn(T, T) [with T = long long int]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int; bool (* F)(T, T) = tflite::reference_ops::GreaterEqualFn<long long int>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int; bool (* F)(T, T) = tflite::reference_ops::GreaterEqualFn<long long int>]	2
comparisons.h:326:1:void tflite::reference_ops::Broadcast4DSlowGreaterEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char]	1
comparisons.h:326:1:void tflite::reference_ops::GreaterEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char]	1
comparisons.h:326:1:void tflite::reference_ops::Broadcast4DSlowGreaterEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char]	1
comparisons.h:326:1:void tflite::reference_ops::GreaterEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char]	1
comparisons.h:46:13:bool tflite::reference_ops::LessFn(T, T) [with T = long int]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int; bool (* F)(T, T) = tflite::reference_ops::LessFn<long int>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int; bool (* F)(T, T) = tflite::reference_ops::LessFn<long int>]	2
comparisons.h:46:13:bool tflite::reference_ops::LessFn(T, T) [with T = long long int]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int; bool (* F)(T, T) = tflite::reference_ops::LessFn<long long int>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int; bool (* F)(T, T) = tflite::reference_ops::LessFn<long long int>]	2
comparisons.h:327:1:void tflite::reference_ops::Broadcast4DSlowLessWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char]	1
comparisons.h:327:1:void tflite::reference_ops::LessWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char]	1
comparisons.h:327:1:void tflite::reference_ops::Broadcast4DSlowLessWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char]	1
comparisons.h:327:1:void tflite::reference_ops::LessWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char]	1
comparisons.h:50:13:bool tflite::reference_ops::LessEqualFn(T, T) [with T = long int]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int; bool (* F)(T, T) = tflite::reference_ops::LessEqualFn<long int>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long int; bool (* F)(T, T) = tflite::reference_ops::LessEqualFn<long int>]	2
comparisons.h:50:13:bool tflite::reference_ops::LessEqualFn(T, T) [with T = long long int]	1
comparisons.h:160:13:void tflite::reference_ops::BroadcastComparison4DSlowImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int; bool (* F)(T, T) = tflite::reference_ops::LessEqualFn<long long int>]	5
comparisons.h:70:13:void tflite::reference_ops::ComparisonImpl(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = long long int; bool (* F)(T, T) = tflite::reference_ops::LessEqualFn<long long int>]	2
comparisons.h:328:1:void tflite::reference_ops::Broadcast4DSlowLessEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char]	1
comparisons.h:328:1:void tflite::reference_ops::LessEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char]	1
comparisons.h:328:1:void tflite::reference_ops::Broadcast4DSlowLessEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char]	1
comparisons.h:328:1:void tflite::reference_ops::LessEqualWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char]	1
fixedpoint.h:156:14:tIntegerType gemmlowp::MaskIfNonZero(tIntegerType) [with tIntegerType = long int]	2
comparisons.h:222:13:void tflite::reference_ops::BroadcastComparison4DSlowWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char; bool (* F)(long int, long int) = tflite::reference_ops::EqualFn<long int>]	5
comparisons.h:109:13:void tflite::reference_ops::ComparisonWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char; bool (* F)(long int, long int) = tflite::reference_ops::EqualFn<long int>]	2
comparisons.h:222:13:void tflite::reference_ops::BroadcastComparison4DSlowWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char; bool (* F)(long int, long int) = tflite::reference_ops::EqualFn<long int>]	5
comparisons.h:109:13:void tflite::reference_ops::ComparisonWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char; bool (* F)(long int, long int) = tflite::reference_ops::EqualFn<long int>]	2
comparisons.h:222:13:void tflite::reference_ops::BroadcastComparison4DSlowWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char; bool (* F)(long int, long int) = tflite::reference_ops::NotEqualFn<long int>]	5
comparisons.h:109:13:void tflite::reference_ops::ComparisonWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char; bool (* F)(long int, long int) = tflite::reference_ops::NotEqualFn<long int>]	2
comparisons.h:222:13:void tflite::reference_ops::BroadcastComparison4DSlowWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char; bool (* F)(long int, long int) = tflite::reference_ops::NotEqualFn<long int>]	5
comparisons.h:109:13:void tflite::reference_ops::ComparisonWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char; bool (* F)(long int, long int) = tflite::reference_ops::NotEqualFn<long int>]	2
comparisons.h:222:13:void tflite::reference_ops::BroadcastComparison4DSlowWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char; bool (* F)(long int, long int) = tflite::reference_ops::GreaterFn<long int>]	5
comparisons.h:109:13:void tflite::reference_ops::ComparisonWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char; bool (* F)(long int, long int) = tflite::reference_ops::GreaterFn<long int>]	2
comparisons.h:222:13:void tflite::reference_ops::BroadcastComparison4DSlowWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char; bool (* F)(long int, long int) = tflite::reference_ops::GreaterFn<long int>]	5
comparisons.h:109:13:void tflite::reference_ops::ComparisonWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char; bool (* F)(long int, long int) = tflite::reference_ops::GreaterFn<long int>]	2
comparisons.h:222:13:void tflite::reference_ops::BroadcastComparison4DSlowWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char; bool (* F)(long int, long int) = tflite::reference_ops::GreaterEqualFn<long int>]	5
comparisons.h:109:13:void tflite::reference_ops::ComparisonWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char; bool (* F)(long int, long int) = tflite::reference_ops::GreaterEqualFn<long int>]	2
comparisons.h:222:13:void tflite::reference_ops::BroadcastComparison4DSlowWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char; bool (* F)(long int, long int) = tflite::reference_ops::GreaterEqualFn<long int>]	5
comparisons.h:109:13:void tflite::reference_ops::ComparisonWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char; bool (* F)(long int, long int) = tflite::reference_ops::GreaterEqualFn<long int>]	2
comparisons.h:222:13:void tflite::reference_ops::BroadcastComparison4DSlowWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char; bool (* F)(long int, long int) = tflite::reference_ops::LessFn<long int>]	5
comparisons.h:109:13:void tflite::reference_ops::ComparisonWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char; bool (* F)(long int, long int) = tflite::reference_ops::LessFn<long int>]	2
comparisons.h:222:13:void tflite::reference_ops::BroadcastComparison4DSlowWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char; bool (* F)(long int, long int) = tflite::reference_ops::LessFn<long int>]	5
comparisons.h:109:13:void tflite::reference_ops::ComparisonWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char; bool (* F)(long int, long int) = tflite::reference_ops::LessFn<long int>]	2
comparisons.h:222:13:void tflite::reference_ops::BroadcastComparison4DSlowWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char; bool (* F)(long int, long int) = tflite::reference_ops::LessEqualFn<long int>]	5
comparisons.h:109:13:void tflite::reference_ops::ComparisonWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = unsigned char; bool (* F)(long int, long int) = tflite::reference_ops::LessEqualFn<long int>]	2
comparisons.h:222:13:void tflite::reference_ops::BroadcastComparison4DSlowWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char; bool (* F)(long int, long int) = tflite::reference_ops::LessEqualFn<long int>]	5
comparisons.h:109:13:void tflite::reference_ops::ComparisonWithScaling(const tflite::ComparisonParams&, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, bool*) [with T = signed char; bool (* F)(long int, long int) = tflite::reference_ops::LessEqualFn<long int>]	2
fixedpoint.h:88:14:tIntegerType gemmlowp::BitNot(tIntegerType) [with tIntegerType = long int]	1
