limits:525:7:static constexpr signed char std::numeric_limits<signed char>::min()	1
limits:528:7:static constexpr signed char std::numeric_limits<signed char>::max()	1
limits:595:7:static constexpr unsigned char std::numeric_limits<unsigned char>::min()	1
limits:598:7:static constexpr unsigned char std::numeric_limits<unsigned char>::max()	1
types.h:137:3:tflite::RuntimeShape::RuntimeShape()	1
types.h:156:3:tflite::RuntimeShape::RuntimeShape(int, const int32*)	1
types.h:178:3:tflite::RuntimeShape::~RuntimeShape()	3
types.h:188:16:int32 tflite::RuntimeShape::DimensionsCount() const	1
types.h:189:16:int32 tflite::RuntimeShape::Dims(int) const	2
types.h:194:15:void tflite::RuntimeShape::SetDim(int, int32)	2
types.h:204:17:int32* tflite::RuntimeShape::DimsData()	2
types.h:207:23:const int32* tflite::RuntimeShape::DimsData() const	2
types.h:213:15:void tflite::RuntimeShape::Resize(int)	5
types.h:231:15:void tflite::RuntimeShape::ReplaceWith(int, const int32*)	1
types.h:254:30:static tflite::RuntimeShape tflite::RuntimeShape::ExtendedShape(int, const tflite::RuntimeShape&)	1
types.h:265:14:int tflite::RuntimeShape::FlatSize() const	2
types.h:280:3:tflite::RuntimeShape::RuntimeShape(int, const tflite::RuntimeShape&, int)	2
pad.h:28:15:constexpr int tflite::reference_ops::PadKernelMaxDimensionCount()	1
pad.h:132:13:void tflite::reference_ops::Pad(const tflite::PadParams&, const tflite::RuntimeShape&, const T*, const int32*, const tflite::RuntimeShape&, T*) [with T = long int]	1
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	1
tensor_ctypes.h:34:21:tflite::RuntimeShape tflite::GetTensorShape(const TfLiteTensor*)	2
kernel_util.h:27:12:int tflite::NumDimensions(const TfLiteTensor*)	1
kernel_util.h:31:28:const TfLiteTensor* tflite::GetInput(TfLiteContext*, const TfLiteNode*, int)	1
kernel_util.h:45:22:TfLiteTensor* tflite::GetOutput(TfLiteContext*, const TfLiteNode*, int)	1
kernel_util.h:59:12:int tflite::NumInputs(const TfLiteNode*)	1
kernel_util.h:60:12:int tflite::NumOutputs(const TfLiteNode*)	1
kernel_util.h:65:16:int64_t tflite::NumElements(const TfLiteIntArray*)	2
kernel_util.h:73:16:int64_t tflite::NumElements(const TfLiteTensor*)	1
kernel_util.h:77:28:const TfLiteTensor* tflite::GetOptionalInputTensor(TfLiteContext*, const TfLiteNode*, int)	4
kernel_util.h:94:13:bool tflite::IsConstantTensor(const TfLiteTensor*)	1
pad.cc:39:3:tflite::ops::micro::pad::PadContext::PadContext(TfLiteContext*, TfLiteNode*)	9
pad.cc:70:14:TfLiteStatus tflite::ops::micro::pad::Prepare(TfLiteContext*, TfLiteNode*)	13
pad.cc:101:14:TfLiteStatus tflite::ops::micro::pad::Eval(TfLiteContext*, TfLiteNode*)	23
pad.cc:210:21:TfLiteRegistration* tflite::ops::micro::Register_PAD()	1
pad.cc:223:21:TfLiteRegistration* tflite::ops::micro::Register_PADV2()	1
pad.h:38:13:void tflite::reference_ops::PadImpl(const tflite::PadParams&, const tflite::RuntimeShape&, const T*, const P*, const tflite::RuntimeShape&, T*) [with T = long int; P = long int]	17
base.h:362:24:T flatbuffers::EndianScalar(T) [with T = int]	1
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = long int]	2
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = float]	2
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = float]	2
pad.h:172:13:void tflite::reference_ops::PadImageStyle(const tflite::PadParams&, const tflite::RuntimeShape&, const float*, const P*, const tflite::RuntimeShape&, float*) [with P = float]	1
pad.h:111:13:void tflite::reference_ops::Pad(const tflite::PadParams&, const tflite::RuntimeShape&, const T*, const P*, const tflite::RuntimeShape&, T*) [with T = float; P = float]	1
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = unsigned char]	2
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = unsigned char]	2
pad.h:152:13:void tflite::reference_ops::PadImageStyle(const tflite::PadParams&, const tflite::RuntimeShape&, const uint8*, const P*, const tflite::RuntimeShape&, uint8*) [with P = unsigned char]	1
pad.h:111:13:void tflite::reference_ops::Pad(const tflite::PadParams&, const tflite::RuntimeShape&, const T*, const P*, const tflite::RuntimeShape&, T*) [with T = unsigned char; P = unsigned char]	1
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = signed char]	2
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = signed char]	2
pad.h:162:13:void tflite::reference_ops::PadImageStyle(const tflite::PadParams&, const tflite::RuntimeShape&, const int8_t*, const P*, const tflite::RuntimeShape&, int8_t*) [with P = signed char]	1
pad.h:111:13:void tflite::reference_ops::Pad(const tflite::PadParams&, const tflite::RuntimeShape&, const T*, const P*, const tflite::RuntimeShape&, T*) [with T = signed char; P = signed char]	1
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = long int]	2
pad.h:38:13:void tflite::reference_ops::PadImpl(const tflite::PadParams&, const tflite::RuntimeShape&, const T*, const P*, const tflite::RuntimeShape&, T*) [with T = float; P = float]	17
pad.h:38:13:void tflite::reference_ops::PadImpl(const tflite::PadParams&, const tflite::RuntimeShape&, const T*, const P*, const tflite::RuntimeShape&, T*) [with T = unsigned char; P = unsigned char]	17
pad.h:38:13:void tflite::reference_ops::PadImpl(const tflite::PadParams&, const tflite::RuntimeShape&, const T*, const P*, const tflite::RuntimeShape&, T*) [with T = signed char; P = signed char]	17
