limits:1204:7:static constexpr long int std::numeric_limits<long int>::min()	1
limits:1207:7:static constexpr long int std::numeric_limits<long int>::max()	1
cmath:1756:3:constexpr float std::round(float)	1
fixedpoint.h:329:21:IntegerType gemmlowp::SaturatingRoundingDoublingHighMul(IntegerType, IntegerType) [with IntegerType = long int]	6
types.h:137:3:tflite::RuntimeShape::RuntimeShape()	1
types.h:156:3:tflite::RuntimeShape::RuntimeShape(int, const int32*)	1
types.h:178:3:tflite::RuntimeShape::~RuntimeShape()	3
types.h:188:16:int32 tflite::RuntimeShape::DimensionsCount() const	1
types.h:189:16:int32 tflite::RuntimeShape::Dims(int) const	2
types.h:204:17:int32* tflite::RuntimeShape::DimsData()	2
types.h:207:23:const int32* tflite::RuntimeShape::DimsData() const	2
types.h:213:15:void tflite::RuntimeShape::Resize(int)	5
types.h:231:15:void tflite::RuntimeShape::ReplaceWith(int, const int32*)	1
types.h:265:14:int tflite::RuntimeShape::FlatSize() const	2
types.h:481:12:int tflite::MatchingFlatSize(const tflite::RuntimeShape&, const tflite::RuntimeShape&)	2
common.h:153:14:int32 tflite::MultiplyByQuantizedMultiplier(int32, int32, int)	2
instrumentation.h:195:3:ruy::profiler::ScopeLabel::~ScopeLabel()	1
tensor_ctypes.h:34:21:tflite::RuntimeShape tflite::GetTensorShape(const TfLiteTensor*)	2
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	1
kernel_util.h:31:28:const TfLiteTensor* tflite::GetInput(TfLiteContext*, const TfLiteNode*, int)	1
kernel_util.h:45:22:TfLiteTensor* tflite::GetOutput(TfLiteContext*, const TfLiteNode*, int)	1
kernel_util.h:59:12:int tflite::NumInputs(const TfLiteNode*)	1
kernel_util.h:60:12:int tflite::NumOutputs(const TfLiteNode*)	1
quantize.cc:36:7:void* tflite::ops::micro::quantize::Init(TfLiteContext*, const char*, size_t)	2
quantize.cc:46:14:TfLiteStatus tflite::ops::micro::quantize::Prepare(TfLiteContext*, TfLiteNode*)	13
quantize.cc:81:14:TfLiteStatus tflite::ops::micro::quantize::Eval(TfLiteContext*, TfLiteNode*)	6
quantize.cc:140:21:TfLiteRegistration* tflite::ops::micro::Register_QUANTIZE()	1
stl_algobase.h:254:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long int]	2
stl_algobase.h:230:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long int]	2
fixedpoint.h:357:20:IntegerType gemmlowp::RoundingDivideByPOT(IntegerType, int) [with IntegerType = long int]	1
base.h:362:24:T flatbuffers::EndianScalar(T) [with T = int]	1
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = float]	2
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = signed char]	2
quantize.h:27:13:void tflite::reference_ops::AffineQuantize(const tflite::QuantizationParams&, const tflite::RuntimeShape&, const InputT*, const tflite::RuntimeShape&, OutputT*) [with InputT = float; OutputT = signed char]	2
tensor_ctypes.h:24:11:T* tflite::GetTensorData(TfLiteTensor*) [with T = unsigned char]	2
quantize.h:27:13:void tflite::reference_ops::AffineQuantize(const tflite::QuantizationParams&, const tflite::RuntimeShape&, const InputT*, const tflite::RuntimeShape&, OutputT*) [with InputT = float; OutputT = unsigned char]	2
tensor_ctypes.h:29:17:const T* tflite::GetTensorData(const TfLiteTensor*) [with T = short int]	2
requantize.h:26:13:void tflite::reference_ops::Requantize(const input_type*, int32_t, int32_t, int32_t, int32_t, int32_t, output_type*) [with input_type = short int; output_type = signed char]	5
fixedpoint.h:64:10:tRawType gemmlowp::Dup(typename gemmlowp::FixedPointRawTypeTraits<tRawType>::ScalarRawType) [with tRawType = long int]	1
fixedpoint.h:70:14:tIntegerType gemmlowp::BitAnd(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
fixedpoint.h:140:14:tIntegerType gemmlowp::ShiftRight(tIntegerType, int) [with tIntegerType = long int]	1
fixedpoint.h:199:14:tIntegerType gemmlowp::MaskIfLessThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
fixedpoint.h:94:14:tIntegerType gemmlowp::Add(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
fixedpoint.h:185:14:tIntegerType gemmlowp::MaskIfGreaterThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
cppmath.h:35:1:T tflite::TfLiteRound(T) [with T = float]	1
instrumentation.h:191:12:) [with Args = {const char*}]	1
fixedpoint.h:156:14:tIntegerType gemmlowp::MaskIfNonZero(tIntegerType) [with tIntegerType = long int]	2
fixedpoint.h:88:14:tIntegerType gemmlowp::BitNot(tIntegerType) [with tIntegerType = long int]	1
